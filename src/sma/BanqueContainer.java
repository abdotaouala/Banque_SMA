/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sma;

import sma.agents.BanqueAgent;
import jade.core.ProfileImpl;
import jade.core.Runtime;
import jade.gui.GuiEvent;
import jade.wrapper.AgentContainer;
import jade.wrapper.AgentController;
import java.util.Date;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import sma.entities.Banque;
import sma.entities.Cheque;
import sma.entities.Compte;
import sma.entities.Demande;

/**
 *
 * @author Octopus
 */
public class BanqueContainer extends javax.swing.JFrame {
    private String codeB;
    private BanqueAgent banqueAgent;
    private AgentContainer ac;
    private BanqueContainer banqueContainer;
    
    Banque b ;
    /**
     * Creates new form BanqueContainer
     */
    HashMap<Long, Demande> demandes;
    String col[] = {"Num demande","Date Création","Code compte", "Code chéque", "Montant", "Code Commerçant"};
    DefaultTableModel tableModel = new DefaultTableModel(col, 0);
    
    public BanqueContainer() {
        initComponents();
        startContainer();
        banqueContainer=this;
        table_demandes.setModel(tableModel); 
    }
    
    public void initialisationDataBase(){
        
        b = new Banque(this.codeB);
        double m = 1000;
           for(int j=1;j<30;j++)
           {
               Compte c = new Compte("C"+j, m*j, "oumast-"+j, new Date());
               for(int k=1;k<50;k++)
               {
                   Cheque ch= new Cheque("Ch"+k);
                   c.setCheques(ch);
               }
               b.setComptes(c);
           }
    }
    public Demande verifierCheque(Demande d)
    {   
        demandes = new HashMap<>();
        demandes.put(d.getCodeDemande(), d);
        String tokenB="", tokenD="";
        tokenD=""+d.getCodeCompte()+d.getCodeCheque();
        for(Compte c : b.getComptes())
        {
            for(Cheque ch : c.getCheques())
            {
                tokenB=""+c.getCodeCompte()+ch.getCodeCheque();
                if(tokenB.equals(tokenD))
                {
                    if(c.getSolde()>d.getMontant()){
                        ch.setMontant_bloquer(d.getMontant());
                        d.setStatut(true);
                    }
                }
            }
            
        }
        
        return d;
    }
    
    public void startContainer() {
		try {
			Runtime rt=Runtime.instance();
			ProfileImpl profile=new ProfileImpl(false); // c'est pas un main container
			profile.setParameter(ProfileImpl.MAIN_HOST, "localhost"); //@ de main container
			ac=rt.createAgentContainer(profile);
			/*deployer un agent*/
			/*AgentController agentController=ac.createNewAgent
					("vendeur1", "sma.agents.VendeurAgent", new Object[]{this});
			agentController.start();*/
			
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

    public String getCodeB() {
        return codeB;
    }

    public void setCodeB(String codeB) {
        this.codeB = codeB;
    }
    
    public BanqueAgent getBanqueAgent() {
        return banqueAgent;
    }

    public void setBanqueAgent(BanqueAgent banqueAgent) {
        this.banqueAgent = banqueAgent;
    }
    public void viewMessage(GuiEvent guiEvent) {
            for(Demande de : demandes.values())
            {       
                Object[] objs = {de.getCodeDemande(), de.getDateDemande().toString(), de.getCodeCompte(), de.getCodeCheque(), de.getMontant(), de.getCommercant().getCodeCommercant()};
                tableModel.addRow(objs);
            }
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_codeBanque = new javax.swing.JTextField();
        btn_demarrer = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_demandes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Code de la banque :");

        btn_demarrer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_demarrer.setText("Deployer");
        btn_demarrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_demarrerActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Liste des demandes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        table_demandes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Numero demande", "Date", "Code compte", "Code chéque", "Montant", "Code commerçant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_demandes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_codeBanque, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_demarrer, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_codeBanque, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_demarrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_demarrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_demarrerActionPerformed
        try {
					String codeBanque=txt_codeBanque.getText().toString();
                                        this.codeB=codeBanque;
                                        initialisationDataBase();
				AgentController agentController = ac.createNewAgent
							(codeBanque, "sma.agents.BanqueAgent", new Object[]{banqueContainer});
				agentController.start();
					
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
	}
    }//GEN-LAST:event_btn_demarrerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanqueContainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanqueContainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanqueContainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanqueContainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanqueContainer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_demarrer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_demandes;
    private javax.swing.JTextField txt_codeBanque;
    // End of variables declaration//GEN-END:variables
}
